/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.ContextFactory;
import hr.algebra.model.Plant;
import hr.algebra.parsers.rss.PlantParser;
import hr.algebra.utilities.MessageUtils;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author lorena
 */
public class AdminControlPanel extends javax.swing.JPanel {

    /**
     * Creates new form UploadPlantsPanel
     */
    public AdminControlPanel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUploadPlantsToDatabase = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChosenPlant = new javax.swing.JTable();
        btnDeleteSelected = new javax.swing.JButton();
        btnDeleteAllPlants = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        btnUploadPlantsToDatabase.setBackground(new java.awt.Color(137, 151, 116));
        btnUploadPlantsToDatabase.setText("Upload all plants and show");
        btnUploadPlantsToDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadPlantsToDatabaseActionPerformed(evt);
            }
        });

        tblChosenPlant.setBackground(new java.awt.Color(255, 255, 255));
        tblChosenPlant.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(137, 151, 116), 5, true));
        tblChosenPlant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblChosenPlant);

        btnDeleteSelected.setBackground(new java.awt.Color(255, 204, 204));
        btnDeleteSelected.setForeground(new java.awt.Color(0, 0, 0));
        btnDeleteSelected.setText("DELETE SELECTED PLANT");
        btnDeleteSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSelectedActionPerformed(evt);
            }
        });

        btnDeleteAllPlants.setBackground(new java.awt.Color(255, 204, 204));
        btnDeleteAllPlants.setForeground(new java.awt.Color(0, 0, 0));
        btnDeleteAllPlants.setText("DELETE ALL PLANTS");
        btnDeleteAllPlants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllPlantsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUploadPlantsToDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteSelected)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteAllPlants, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUploadPlantsToDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteAllPlants, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadPlantsToDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadPlantsToDatabaseActionPerformed
        try {
            PlantParser.parse();
            //repository.createPlants(plants);
            loadModel();

        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Unrecoverable error", "Unable to upload plants");
            //TODO nemoj console logati
            System.out.println(ex);
            System.exit(1);
        }
    }//GEN-LAST:event_btnUploadPlantsToDatabaseActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        init();    }//GEN-LAST:event_formComponentShown

    private void btnDeleteSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSelectedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteSelectedActionPerformed

    private void btnDeleteAllPlantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllPlantsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteAllPlantsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteAllPlants;
    private javax.swing.JButton btnDeleteSelected;
    private javax.swing.JButton btnUploadPlantsToDatabase;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblChosenPlant;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel<Plant> plantsModel;
    private Repository repository;

    private void init() {
        try {
            //repository = ContextFactory.getRepository();
            plantsModel = new DefaultListModel<>();
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(AdminControlPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Unrecoverable error", "Cannot initiate the form");
            System.exit(1);
        }
    }

    private void loadModel() throws Exception {
        //List<Plant> plants = repository.getAllPlants();
        plantsModel.clear();
        //plants.forEach(plantsModel::addElement);
    }
}
